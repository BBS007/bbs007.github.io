{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/answer-card.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/cards-against-humanity/cards-against-humanity.component.css","webpack:///./src/app/question-card/question-card.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/cards-against-humanity/cards-against-humanity.component.html","webpack:///./src/app/question-card/question-card.component.html","webpack:///./src/app/card.ts","webpack:///./src/app/cards-against-humanity/cards-against-humanity.component.ts","webpack:///./src/app/cards.service.ts","webpack:///./src/app/question-card.ts","webpack:///./src/app/question-card/question-card.component.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 138;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 138\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","/**\n * This class represents an answer card.\n */\n\nimport { Card } from \"app/card\";\n\nexport class AnswerCard extends Card {\n\n    constructor(text: string) {\n        super(text);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/answer-card.ts","import { Component } from '@angular/core';\n\nimport { CardsAgainstHumanityComponent } from './cards-against-humanity/cards-against-humanity.component'\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    entryComponents: [CardsAgainstHumanityComponent]\n})\n    \nexport class AppComponent {\n    \n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule } from '@angular/router'\r\n\r\n\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { CardsAgainstHumanityComponent } from './cards-against-humanity/cards-against-humanity.component';\r\n\r\n// Services\r\nimport { CardsService } from './cards.service';\nimport { QuestionCardComponent } from './question-card/question-card.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        HttpModule,\r\n        RouterModule.forRoot([\r\n            {\r\n                path: 'cah',\r\n                component: CardsAgainstHumanityComponent\r\n            }\r\n        ])\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        CardsAgainstHumanityComponent,\r\n        QuestionCardComponent\r\n    ],\r\n    providers: [\r\n        CardsService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\n    \r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".selected {\\r\\n    background-color: #CFD8DC !important;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.heroes {\\r\\n    margin: 0 0 2em 0;\\r\\n    list-style-type: none;\\r\\n    padding: 0;\\r\\n    width: 15em;\\r\\n}\\r\\n\\r\\n.heroes li {\\r\\n    cursor: pointer;\\r\\n    position: relative;\\r\\n    left: 0;\\r\\n    background-color: #EEE;\\r\\n    margin: .5em;\\r\\n    padding: .3em 0;\\r\\n    height: 1.6em;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n.heroes li.selected:hover {\\r\\n    background-color: #BBD8DC !important;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.heroes li:hover {\\r\\n    color: #607D8B;\\r\\n    background-color: #DDD;\\r\\n    left: .1em;\\r\\n}\\r\\n\\r\\n.heroes .text {\\r\\n    position: relative;\\r\\n    top: -3px;\\r\\n}\\r\\n\\r\\n.heroes .badge {\\r\\n    display: inline-block;\\r\\n    font-size: small;\\r\\n    color: white;\\r\\n    padding: 0.8em 0.7em 0 0.7em;\\r\\n    background-color: #607D8B;\\r\\n    line-height: 1em;\\r\\n    position: relative;\\r\\n    left: -1px;\\r\\n    top: -4px;\\r\\n    height: 1.8em;\\r\\n    margin-right: .8em;\\r\\n    border-radius: 4px 0 0 4px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 202\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cards-against-humanity/cards-against-humanity.component.css\n// module id = 203\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".card {\\r\\n    width: 12em;\\r\\n    height: 16em;\\r\\n    border: 1px solid black;\\r\\n    border-radius: 25px;\\r\\n    padding: 0.5em;\\r\\n    vertical-align: middle;\\r\\n    display: table;\\r\\n}\\r\\n\\r\\n.card-question p {\\r\\n    display: table-cell;\\r\\n    margin: 0em;\\r\\n    border-radius: 20px;\\r\\n    height: inherit;\\r\\n    width: inherit;\\r\\n    background-color: black;\\r\\n    color: white;\\r\\n    vertical-align: middle;\\r\\n    text-align: center;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/question-card/question-card.component.css\n// module id = 204\n// module chunks = 1","module.exports = \"<app-cards-against-humanity>\\n    \\n</app-cards-against-humanity>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 206\n// module chunks = 1","module.exports = \"<h1>Questions</h1>\\n\\n<div *ngFor=\\\"let q of questions\\\">\\n    <app-question-card [questionCard]=\\\"q\\\">\\n    </app-question-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cards-against-humanity/cards-against-humanity.component.html\n// module id = 207\n// module chunks = 1","module.exports = \"<div class=\\\"card card-question\\\">\\n  <p>\\n    {{questionCard.text}}\\n  </p>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/question-card/question-card.component.html\n// module id = 208\n// module chunks = 1","/**\n * This structure is the base for every card in the game.\n */\n\nexport abstract class Card {\n\n    // The text to display on the card\n    private text : string;\n\n    constructor(text: string) {\n        this.text = text;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/card.ts","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { CardsService } from '../cards.service';\n\nimport { QuestionCard } from \"app/question-card\";\nimport { AnswerCard } from \"app/answer-card\";\n\nimport { QuestionCardComponent } from '../question-card/question-card.component';\n\n@Component({\n    selector: 'app-cards-against-humanity',\n    templateUrl: './cards-against-humanity.component.html',\n    styleUrls: ['./cards-against-humanity.component.css'],\n    providers: [CardsService],\n    entryComponents: [\n        QuestionCardComponent\n    ]\n})\n\n\nexport class CardsAgainstHumanityComponent implements OnInit {\n\n    private questions: QuestionCard[];\n    private answers: AnswerCard[];\n\n    constructor(\n        private cardsService: CardsService,\n        private route: ActivatedRoute,\n        private location: Location\n    ) { \n        \n        this.cardsService.getQuestionCards().subscribe(res => {\n            this.questions = res;\n        });\n        this.cardsService.getAnswserCards().subscribe(res => {\n            this.answers = res;\n        });\n        \n    }\n\n\n    ngOnInit(): void {\n        \n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cards-against-humanity/cards-against-humanity.component.ts","/**\n * This service helps providing cards.\n */\n\nimport { Injectable } from '@angular/core';\nimport {Http, Response} from '@angular/http';\n\n\nimport 'rxjs/Rx';\nimport { Observable } from 'rxjs';\n\nimport { QuestionCard } from './question-card'\nimport { AnswerCard } from './answer-card'\n\n@Injectable()\nexport class CardsService {\n\n    url: string = '../assets/cards.json';\n\n    dataQuestion: Observable<QuestionCard[]>;\n    dataAnswer: Observable<AnswerCard[]>;\n\n    constructor(private http: Http) { }\n\n\n    public getQuestionCards(): Observable<QuestionCard[]> {\n        console.log('Getting questions');\n        if (!this.dataQuestion) {\n            this.dataQuestion = this.http.get(this.url)\n                .map(res => {\n                    console.log(res.json());\n                    return res.json().blackCards.map(elt => {\n                        return new QuestionCard(elt.text, elt.pick);\n                    });\n                });\n            console.log(this.dataQuestion);\n        }\n\n        return this.dataQuestion;\n    }\n\n\n    public getAnswserCards(): Observable<AnswerCard[]> {\n\n        if (!this.dataAnswer) {\n            this.dataAnswer = this.http.get(this.url)\n                .map(res => {\n                    return res.json().whiteCards.map(elt => {\n                    console.log(elt);\n                        return new AnswerCard(elt);\n                })\n            })\n        }\n\n        return this.dataAnswer\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cards.service.ts","/**\n * This class represents a question. This is basically some text with blanks or\n * just requiring an answer.\n */\n\nimport { Card } from \"app/card\";\n\nexport class QuestionCard extends Card {\n\n    // Thenumber of blanks in the question\n    private blankNumber: number;\n\n    constructor(text: string, blankNumber: number) {\n        super(text);\n        this.blankNumber = blankNumber;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question-card.ts","import { Component, Input, OnInit } from '@angular/core';\n\nimport { QuestionCard } from '../question-card';\n\n@Component({\n  selector: 'app-question-card',\n  templateUrl: './question-card.component.html',\n  styleUrls: ['./question-card.component.css']\n})\nexport class QuestionCardComponent implements OnInit {\n\n  @Input() questionCard: QuestionCard;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question-card/question-card.component.ts"],"sourceRoot":""}