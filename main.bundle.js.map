{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/answer-card/answer-card.component.css","webpack:///./src/app/app.component.css","webpack:///./src/app/cards-against-humanity/cards-against-humanity.component.css","webpack:///./src/app/answer-card/answer-card.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/cards-against-humanity/cards-against-humanity.component.html","webpack:///./src/app/question-card/question-card.component.html","webpack:///./src/app/answer-card.ts","webpack:///./src/app/question-card.ts","webpack:///./src/app/question-card/question-card.component.css","webpack:///./src/app/answer-card/answer-card.component.ts","webpack:///./src/app/card.ts","webpack:///./src/app/cards-against-humanity/cards-against-humanity.component.ts","webpack:///./src/app/cards.service.ts","webpack:///./src/app/question-card/question-card.component.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 143;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 143\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\nimport { CardsAgainstHumanityComponent } from './cards-against-humanity/cards-against-humanity.component'\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    entryComponents: [CardsAgainstHumanityComponent]\n})\n    \nexport class AppComponent {\n    \n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule } from '@angular/router'\r\n\r\n// Services\r\nimport { CardsService } from './cards.service';\r\n\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { CardsAgainstHumanityComponent } from './cards-against-humanity/cards-against-humanity.component';\r\nimport { QuestionCardComponent } from './question-card/question-card.component';\r\nimport { AnswerCardComponent } from './answer-card/answer-card.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        HttpModule,\r\n        RouterModule.forRoot([\r\n            {\r\n                path: 'cah',\r\n                component: CardsAgainstHumanityComponent\r\n            }\r\n        ])\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        CardsAgainstHumanityComponent,\r\n        QuestionCardComponent,\r\n        AnswerCardComponent\r\n    ],\r\n    providers: [\r\n        CardsService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\n    \r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/answer-card/answer-card.component.css\n// module id = 210\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 211\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/* Board */\\r\\n.board-back {\\r\\n    background: url(\\\"/assets/board-noise.jpg\\\");\\r\\n\\r\\n    z-index: 99;\\r\\n}\\r\\n\\r\\n.board {\\r\\n    height: 40em;\\r\\n    border: 20px solid rgb(80, 30, 50);\\r\\n    background-color: rgba(20, 110, 20, 0.9);\\r\\n\\r\\n    box-shadow: inset 0 0 4em black;\\r\\n\\r\\n    padding: 1em;\\r\\n\\r\\n    z-index: 98;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    z-index: 90;\\r\\n}\\r\\n\\r\\n/* Answers */\\r\\n.answers {\\r\\n    float: left;\\r\\n    position: relative;\\r\\n    left: 0;\\r\\n    bottom: -10em;\\r\\n}\\r\\n\\r\\n.answers > .answer:not(:first-child) {\\r\\n    /* The cards collapse on each other */\\r\\n    margin-left: -4em;\\r\\n}\\r\\n\\r\\n.answer {\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.answer:hover {\\r\\n    /* Bring to front when hovered */\\r\\n    position: relative;\\r\\n    z-index: 89;\\r\\n\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cards-against-humanity/cards-against-humanity.component.css\n// module id = 212\n// module chunks = 1","module.exports = \"<div class=\\\"card card-answer\\\">\\n  <div class=\\\"card-text\\\">\\n    {{card.text}}\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/answer-card/answer-card.component.html\n// module id = 215\n// module chunks = 1","module.exports = \"<app-cards-against-humanity>\\n    \\n</app-cards-against-humanity>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 216\n// module chunks = 1","module.exports = \"<div class=\\\"board-back\\\">\\n\\n    <div class=\\\"board\\\">\\n\\n    <div class=\\\"pull-right\\\">\\n        <button (click)=\\\"newGame()\\\" class=\\\"btn btn-block btn-success\\\">New Game</button>\\n        <button (click)=\\\"newDeal()\\\" class=\\\"btn btn-block btn-success\\\">New Deal</button>\\n    </div>\\n\\n        <div *ngIf=\\\"currentQuestion\\\">\\n            <app-question-card [card]=\\\"currentQuestion\\\" class=\\\"question card-flat\\\">\\n            </app-question-card>\\n        </div>\\n\\n        <div *ngIf=\\\"currentAnswers\\\" class=\\\"answers\\\">\\n            \\n            <ng-container *ngFor=\\\"let a of currentAnswers\\\">\\n                \\n                <app-answer-card [card]=\\\"a\\\" class=\\\"answer card-hand\\\">\\n                </app-answer-card>\\n                \\n            </ng-container>\\n            \\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cards-against-humanity/cards-against-humanity.component.html\n// module id = 217\n// module chunks = 1","module.exports = \"<div class=\\\"card card-question\\\">\\n  <div class=\\\"card-text\\\">\\n    {{card.text}}\\n\\n    <div class=\\\"card-pick\\\">\\n      {{card.pick}}\\n    </div>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/question-card/question-card.component.html\n// module id = 218\n// module chunks = 1","/**\n * This class represents an answer card.\n */\n\nimport { Card } from \"app/card\";\n\nexport class AnswerCard extends Card {\n\n    constructor(text: string) {\n        super(text);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/answer-card.ts","/**\n * This class represents a question. This is basically some text with blanks or\n * just requiring an answer.\n */\n\nimport { Card } from \"app/card\";\n\nexport class QuestionCard extends Card {\n\n    // Thenumber of blanks in the question\n    private pick: number;\n\n    constructor(text: string, pick: number) {\n        super(text);\n        this.pick = pick;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question-card.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/* Global cards style */\\r\\n.card {\\r\\n    display: table;\\r\\n    position: relative;\\r\\n    width: 12em;\\r\\n    height: 16em;\\r\\n    padding: 0.5em;\\r\\n\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n\\r\\n    border: 1px solid black;\\r\\n    border-radius: 2em;\\r\\n\\r\\n    background-color: white;\\r\\n\\r\\n}\\r\\n\\r\\n.card-text {\\r\\n    display: table-cell;\\r\\n    width: inherit;\\r\\n    height: inherit;\\r\\n    margin: 0.5em;\\r\\n    padding: 0.5em;\\r\\n    \\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n\\r\\n    border: 1px solid black;\\r\\n    border-radius: 1.5em;\\r\\n}\\r\\n\\r\\n/* Question card */\\r\\n.card-question {\\r\\n    background: white;\\r\\n\\r\\n    box-shadow: 0em 0em 1em black;\\r\\n}\\r\\n\\r\\n.card-question .card-text {\\r\\n    background-color: black;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.card-text .card-pick {\\r\\n    /*padding: 0.5em;*/\\r\\n    /*padding-bottom: 0.5em;*/\\r\\n\\r\\n    min-width: 2.5em;\\r\\n    height: 2.5em;\\r\\n\\r\\n    color: white;\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n\\r\\n    border-top-left-radius: 20px;\\r\\n    border-left: 1px solid white;\\r\\n    border-top: 1px solid white;\\r\\n}\\r\\n\\r\\n/* Answer card */\\r\\n.card-answer {\\r\\n    background-color: black;\\r\\n\\r\\n    box-shadow: 1em 1em 4em black;\\r\\n}\\r\\n\\r\\n.card-answer .card-text {\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.card-answer:hover {\\r\\n    box-shadow: 0 0 4em white;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/question-card/question-card.component.css\n// module id = 75\n// module chunks = 1","import { Component, Input, OnInit } from '@angular/core';\n\nimport { AnswerCard } from '../answer-card';\n\n@Component({\n  selector: 'app-answer-card',\n  templateUrl: './answer-card.component.html',\n  styleUrls: [\n    './answer-card.component.css',\n    '../question-card/question-card.component.css'\n  ]\n})\n  \nexport class AnswerCardComponent implements OnInit {\n\n  @Input() card: AnswerCard;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/answer-card/answer-card.component.ts","/**\n * This structure is the base for every card in the game.\n */\n\nexport abstract class Card {\n\n    // The text to display on the card\n    private text : string;\n\n    constructor(text: string) {\n        this.text = text;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/card.ts","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Location } from '@angular/common';\n\n// Services\nimport { CardsService } from '../cards.service';\n\n// Classes\nimport { QuestionCard } from \"app/question-card\";\nimport { AnswerCard } from \"app/answer-card\";\n\n// Components\nimport { QuestionCardComponent } from '../question-card/question-card.component';\nimport { AnswerCardComponent } from '../answer-card/answer-card.component';\n\n@Component({\n    selector: 'app-cards-against-humanity',\n    templateUrl: './cards-against-humanity.component.html',\n    styleUrls: [\n        './cards-against-humanity.component.css',\n        '../question-card/question-card.component.css'\n    ],\n    providers: [\n        CardsService\n    ],\n    entryComponents: [\n        QuestionCardComponent,\n        AnswerCardComponent\n    ]\n})\n\n\nexport class CardsAgainstHumanityComponent implements OnInit {\n\n    private questions: QuestionCard[];\n    private answers: AnswerCard[];\n\n    private currentQuestion: QuestionCard;\n    private currentAnswers: AnswerCard[];\n\n    private promiseDone: Promise<Boolean>;\n\n    constructor(\n        private cardsService: CardsService,\n        private route: ActivatedRoute,\n        private location: Location\n    ) { \n        this.currentQuestion = null;\n        this.currentAnswers = null;\n\n        // Init the cards and deal when the promises are resolved\n        this.initCardsLists()\n            .then(\n            (res) => {\n                this.newDeal();\n            }\n        );\n\n    }\n\n    /**\n     * Will fetch the lists in a promise.\n     * @return a promise that is resolved when lists are reset.\n     */\n    private initCardsLists(): Promise<Boolean[]> {\n\n        // Questions promise, resolved when the result is set\n        const promiseQuestions = new Promise<Boolean>((resolve) => {\n\n            this.cardsService.getQuestionCards().subscribe(res => {\n                this.questions = res;\n                console.log(\"Questions set\");\n                resolve(true);\n            });\n\n        });\n        \n        // Answers promise, resolved when the result is set\n        const promiseAnswers = new Promise<Boolean>((resolve) => {\n\n            this.cardsService.getAnswserCards().subscribe(res => {\n                this.answers = res;\n                console.log(\"Answers set\");\n                resolve(true);\n            });\n\n        });\n        \n        // This promise is resolved after both are resolved\n        return Promise.all([\n            promiseQuestions,\n            promiseAnswers\n        ]);\n        \n    }\n\n    private randomQuestion(): QuestionCard {\n        var ret = new QuestionCard(\"No more questions\", 0);\n\n        if (0 != this.questions.length) {\n            \n            // Random number to pick in tab\n            let randNumber = Math.random() * this.questions.length;\n\n            // Get the random question and delete it from the list\n            ret = this.questions.splice(randNumber, 1)[0];\n        }\n\n        return ret;\n    }\n\n    private randomAnswers(howMany: number = 5): AnswerCard[] {\n        var ret: AnswerCard[] = new Array<AnswerCard>(howMany);\n\n        if (howMany < this.answers.length) {\n            for (var i = 0; i < howMany; ++i) {\n\n                // Random number to pick in tab\n                let randNumber = Math.random() * this.answers.length;\n\n                ret[i] = this.answers.splice(randNumber, 1)[0];\n            }\n\n        } else {\n            for (var i = 0; i < howMany; ++i) {\n                ret.push(new AnswerCard(\"No more answers\"));\n            }\n        }\n\n        return ret;\n    }\n\n    public newDeal(): void {\n        console.log(\"New deal\");\n        this.currentQuestion = this.randomQuestion();\n        this.currentAnswers = this.randomAnswers();\n        \n        console.log(\"Remaining questions \" + this.questions.length);\n        console.log(\"Remaining answers \" + this.answers.length);\n    }\n\n    public newGame(): void {\n        console.log(\"New game\");\n        this.initCardsLists()\n            .then((res) => {\n                console.log(\"Promise res : \" + res);\n                this.newDeal();\n        });\n            \n        \n    }\n\n\n    ngOnInit(): void {\n        \n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cards-against-humanity/cards-against-humanity.component.ts","/**\n * This service helps providing cards.\n */\n\nimport { Injectable } from '@angular/core';\nimport {Http, Response} from '@angular/http';\n\n\nimport 'rxjs/Rx';\nimport { Observable } from 'rxjs';\n\nimport { QuestionCard } from './question-card'\nimport { AnswerCard } from './answer-card'\n\n@Injectable()\nexport class CardsService {\n\n    // Urls for different languages\n    url_en: string = '../assets/cards_en.json';\n    url_fr: string = '../assets/cards_en.json';\n\n    // Observables\n    dataQuestion: Observable<QuestionCard[]>;\n    dataAnswer: Observable<AnswerCard[]>;\n\n    constructor(private http: Http) { }\n\n    // Choose the url according to the current lang\n    private chooseUrl(): string {\n        return this.url_fr;\n    }\n\n    public getQuestionCards(): Observable<QuestionCard[]> {\n        var url = this.chooseUrl();\n\n        if (!this.dataQuestion) {\n            this.dataQuestion = this.http.get(url)\n                .map(res => { \n                    return res.json().blackCards.map(elt => {\n                        return new QuestionCard(elt.text, elt.pick);\n                    });\n                });\n        }\n\n        return this.dataQuestion;\n    }\n\n\n    public getAnswserCards(): Observable<AnswerCard[]> {\n        var url = this.chooseUrl();\n        \n        if (!this.dataAnswer) {\n            this.dataAnswer = this.http.get(url)\n                .map(res => {\n                    return res.json().whiteCards.map(elt => {\n                        return new AnswerCard(elt);\n                })\n            })\n        }\n\n        return this.dataAnswer\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cards.service.ts","import { Component, Input, OnInit } from '@angular/core';\n\nimport { QuestionCard } from '../question-card';\n\n@Component({\n  selector: 'app-question-card',\n  templateUrl: './question-card.component.html',\n  styleUrls: ['./question-card.component.css']\n})\nexport class QuestionCardComponent implements OnInit {\n\n  @Input() card: QuestionCard;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question-card/question-card.component.ts"],"sourceRoot":""}